<launch>
  <arg name="global_planning_freq" default="$(optenv GM_PARAM_GLOBAL_PLANNING_FREQ 0)"/>
  <arg name="controller_freq" default="$(optenv GM_PARAM_CONTROLLER_FREQ 5)"/>
  <arg name="use_recovery_behaviors" default="true"/>
  
  <arg name="holonomic" default="false"/>
  <arg name="projection_operator" default="true"/>

  <include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/>
  
  <arg name="egocircle_mat" default="/egocircle_mat"/>
  <arg name="egocircle_info" default="/egocircle_info"/>

  <node name="egocircle_node" pkg="egocircle" type="ego_circle">
  </node>
  
  <node name="egocircle_to_mat" pkg="potential_gap_collision_checking" type="egocircle_to_mat">
      <param name="egocircle_mat_width" value="512"/>
  </node>

  <node pkg="potential_gap_path_following" type="potential_gap_egocircle_path_follower" respawn="false" name="potential_gap_egocircle_path_follower" output="screen" clear_params="true" >
      <rosparam file="$(find nav_configs)/config/common_costmap_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find nav_configs)/config/common_costmap_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find nav_configs)/config/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find nav_configs)/config/global_costmap_params.yaml" command="load"/>
    
      <rosparam file="$(find nav_configs)/config/move_base_rb_params.yaml" command="load"/>
      <rosparam file="$(find nav_configs)/config/global_planner_params.yaml" command="load" ns="GlobalPlanner"/>

      <param name="recovery_behavior_enabled" value="false" unless="$(arg use_recovery_behaviors)"/>

      <param name="controller_frequency" value="$(arg controller_freq)" />
      <param name="planner_frequency" value="$(arg global_planning_freq)"/>

      <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/>

      <param name="simulated_slow_global_plan_time" value="0" />

      <param name="global_following_enabled" value="false" />
      
      <param name="collision_checking_enabled" value="true" />

      <param name="ni_enabled" value="false" />
      
      <!-- Collision checking -->
      <param name="min_num_tc" value="10" />
      <param name="min_num_te" value="7" />

      <param name="pg_egocircle_cc_wrapper/egocircle_topic" value="$(arg egocircle_mat)"/>
      <param name="pg_egocircle_cc_wrapper/egocircle_info_topic" value="$(arg egocircle_info)"/>

      <!--Goal reached threshold-->
      <param name="final_dist_thresh" value="0.5" />

      <!-- Approach-specific parameters/remappings -->
      <param name="base_local_planner" value="potential_gap/PotentialGapPlannerROS" />
      
      <!-- Approach-specific parameters/remappings/etc -->
      <rosparam file="$(find potential_gap)/config/potentialgap_local_planner_pf_params.yaml" command="load"/>

      <!-- Params for the trajectory controller-->
      <param name="trajectory_controller/holonomic" value="$(arg holonomic)"/>
      <param name="trajectory_controller/projection_operator" value="$(arg projection_operator)"/>

      <rosparam file="$(find potential_gap_trajectory_controller)/configs/potential_gap_trajectory_controller_params.yaml" command="load" ns="trajectory_controller"/>

  </node>

  <!--launch-prefix="xterm -e gdb -ex run - -args"-->

</launch>

